serviceMaps:
  serviceName: PENSION
  mappings:
  - version: 1.0
    name: Save Employee to Pension Notification Register
    description: Save Employee to Pension Notification Register
    fromTopic: SAVE-EMPLOYEE-TO-PENSION-NOTIFICATION-REGISTER
    isTransaction: true
    queryMaps:

    - query: INSERT INTO eg_pension_employee(uuid, tenantid, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, last_modified_by, created_date, last_modified_date, employee_hrms_uuid, salutation, gender, employee_status, employee_type, date_of_appointment) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: Employees.*
      jsonMaps:

      - jsonPath: $.Employees.*.pensionEmployeeId   

      - jsonPath: $.Employees.*.tenantId

      - jsonPath: $.Employees.*.id     

      - jsonPath: $.Employees.*.code   

      - jsonPath: $.Employees.*.name

      - jsonPath: $.Employees.*.dob

      - jsonPath: $.Employees.*.dateOfRetirement

      - jsonPath: $.Employees.*.dateOfDeath     

      - jsonPath: $.Employees.*.active      

      - jsonPath: $.Employees.*.auditDetails.createdBy

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate

      - jsonPath: $.Employees.*.uuid     

      - jsonPath: $.Employees.*.salutation

      - jsonPath: $.Employees.*.gender

      - jsonPath: $.Employees.*.employeeStatus

      - jsonPath: $.Employees.*.employeeType

      - jsonPath: $.Employees.*.dateOfAppointment      
    
    - query: INSERT INTO eg_pension_employee_audit(uuid, tenantid, pension_employee_id, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, last_modified_by, created_date, last_modified_date,employee_hrms_uuid, salutation, gender, employee_status, employee_type, date_of_appointment) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        
      basePath: Employees.*
      jsonMaps:

      - jsonPath: $.Employees.*.pensionEmployeeAuditId

      - jsonPath: $.Employees.*.tenantId

      - jsonPath: $.Employees.*.pensionEmployeeId   

      - jsonPath: $.Employees.*.id     

      - jsonPath: $.Employees.*.code   

      - jsonPath: $.Employees.*.name

      - jsonPath: $.Employees.*.dob

      - jsonPath: $.Employees.*.dateOfRetirement

      - jsonPath: $.Employees.*.dateOfDeath     

      - jsonPath: $.Employees.*.active      

      - jsonPath: $.Employees.*.auditDetails.createdBy

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate

      - jsonPath: $.Employees.*.uuid     

      - jsonPath: $.Employees.*.salutation

      - jsonPath: $.Employees.*.gender

      - jsonPath: $.Employees.*.employeeStatus

      - jsonPath: $.Employees.*.employeeType

      - jsonPath: $.Employees.*.dateOfAppointment              
    
    - query: INSERT INTO eg_pension_notification_register(uuid, tenantid, pension_employee_id, is_initiated, active, created_by, last_modified_by, created_date, last_modified_date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?);  
    
      basePath: Employees.*.notificationRegister
      jsonMaps:

      - jsonPath: $.Employees.*.notificationRegister.pensionNotificationRegisterId

      - jsonPath: $.Employees.*.tenantId

      - jsonPath: $.Employees.*.pensionEmployeeId
      
      - jsonPath: $.Employees.*.notificationRegister.isInitiated       

      - jsonPath: $.Employees.*.active      

      - jsonPath: $.Employees.*.auditDetails.createdBy

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate            

    - query: INSERT INTO eg_pension_notification_register_audit(uuid, tenantid, pension_notification_register_id, pension_employee_id, is_initiated, active, created_by, last_modified_by, created_date, last_modified_date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
   
      basePath: Employees.*.notificationRegister
      jsonMaps:

      - jsonPath: $.Employees.*.notificationRegister.pensionNotificationRegisterAuditId

      - jsonPath: $.Employees.*.tenantId

      - jsonPath: $.Employees.*.notificationRegister.pensionNotificationRegisterId      

      - jsonPath: $.Employees.*.pensionEmployeeId      

      - jsonPath: $.Employees.*.notificationRegister.isInitiated          

      - jsonPath: $.Employees.*.active  

      - jsonPath: $.Employees.*.auditDetails.createdBy

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate      

  - version: 1.0
    name: Initiate Regular Retirement Pension
    description: Initiate Regular Retirement Pension from Pension Notification Register
    fromTopic: RRP_INITIATE
    isTransaction: true
    queryMaps:

    - query: INSERT INTO eg_pension_workflow_header(uuid, tenantid, pension_employee_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate       

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state
    
    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

    - query: UPDATE eg_pension_notification_register SET is_initiated = true, last_modified_by = ?,  last_modified_date = ? WHERE pension_employee_id = ?;
        
      basePath: ProcessInstances.*.employee
      jsonMaps:               

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId 
    
    - query: INSERT INTO eg_pension_notification_register_audit(uuid, tenantid, pension_notification_register_id, pension_employee_id, is_initiated, active, created_by, created_date) SELECT ?, tenantid, uuid, pension_employee_id, is_initiated, active, ?, ? FROM eg_pension_notification_register WHERE pension_employee_id = ?;
   
      basePath: ProcessInstances.*.notificationRegister
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.notificationRegister.pensionNotificationRegisterAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate      

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId           

    - query: INSERT INTO eg_pension_employee_other_details(uuid, tenantid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef,  active, created_by, last_modified_by, created_date, last_modified_date, bank_code, bank_ifsc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
        
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state 
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.claimant

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc
    
    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, bank_code, bank_ifsc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state 
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.claimant

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate    

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc
     
    - query: INSERT INTO eg_pension_calculation_details(uuid, tenantid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state           
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate 

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

    - query: INSERT INTO eg_pension_employee_assignment(uuid, tenantid, pension_employee_id, position, department, designation, from_date, to_date, govt_order_no, reporting_to, is_hod, is_current_assignment, active, created_by, created_date, is_primary_assignment, is_pension_applicable) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_assignment WHERE pension_employee_id=?);

      basePath: ProcessInstances.*.employee.assignments.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.id   

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.position  
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.department 
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.designation                  

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.fromDate      

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.toDate

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.govtOrderNumber

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.reportingTo

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isHOD

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isCurrentAssignment

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isPrimaryAssignment

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isPensionApplicable

      - jsonPath: $.ProcessInstances.*.assignments.*.pensionEmployeeId       

    - query: INSERT INTO eg_pension_employee_service_history(uuid, tenantid, pension_employee_id, service_status, service_from, service_to, order_no, location, is_current_position, active, created_by, created_date) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_service_history WHERE pension_employee_id=?);

      basePath: ProcessInstances.*.employee.serviceHistory.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.id   

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceStatus  
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceFrom 
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceTo                  

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.orderNo      

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.location

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.isCurrentPosition      

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.serviceHistory.*.pensionEmployeeId 

    - query: INSERT INTO eg_pension_employee_contact_details(uuid, tenantid, pension_employee_id, mobile_number, email_id, alt_contact_number, pan, aadhaar_number, permanent_address, permanent_city, permanent_pin_code, correspondence_address, correspondence_city, correspondence_pin_code, father_or_husband_name, blood_group, identification_mark, active, created_by, created_date) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_contact_details WHERE pension_employee_id=?);

      basePath: ProcessInstances.*.employee.user
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.user.employeeContactDetailsId

      - jsonPath: $.ProcessInstances.*.employee.user.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.user.mobileNumber  

      - jsonPath: $.ProcessInstances.*.employee.user.emailId

      - jsonPath: $.ProcessInstances.*.employee.user.altContactNumber

      - jsonPath: $.ProcessInstances.*.employee.user.pan

      - jsonPath: $.ProcessInstances.*.employee.user.aadhaarNumber

      - jsonPath: $.ProcessInstances.*.employee.user.permanentAddress

      - jsonPath: $.ProcessInstances.*.employee.user.permanentCity

      - jsonPath: $.ProcessInstances.*.employee.user.permanentPinCode

      - jsonPath: $.ProcessInstances.*.employee.user.correspondenceAddress

      - jsonPath: $.ProcessInstances.*.employee.user.correspondenceCity

      - jsonPath: $.ProcessInstances.*.employee.user.correspondencePinCode    
      
      - jsonPath: $.ProcessInstances.*.employee.user.fatherOrHusbandName

      - jsonPath: $.ProcessInstances.*.employee.user.bloodGroup

      - jsonPath: $.ProcessInstances.*.employee.user.identificationMark

      - jsonPath: $.ProcessInstances.*.employee.user.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate  
      
      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId
     
  - version: 1.0
    name: Save workflow data at INITIATED state
    description: Save workflow data at INITIATED state
    fromTopic: SAVE_RRP_INITIATED
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_attachment SET active = false, last_modified_by = ?, last_modified_date = ? WHERE document_type = ? AND workflow_header_id = ?;
        
      basePath: ProcessInstances.*.documents.*
      jsonMaps:                   

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.documents.*.documentType  

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  

    - query: INSERT INTO eg_pension_attachment(uuid, tenantid, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.documents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType                  

      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: INSERT INTO eg_pension_attachment_audit(uuid, tenantid, pension_attachment_id, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);

      basePath: ProcessInstances.*.documents.*.documentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.documentAudit.pensionAttachmentAuditId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType     
      
      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate    

    - query: UPDATE eg_pension_employee_other_details SET workflow_state = ?, ltc = ?, lpd = ?, pension_arrear = ?, is_da_medical_admissible = ?, fma = ?, medical_relief = ?, miscellaneous = ?, over_payment = ?, income_tax = ?, cess = ?, bank_address = ?,  account_number = ?, wef = ?, last_modified_by = ?,  last_modified_date = ?, total_no_pay_leaves_days =?, dues =?, is_employment_active =?, is_convicted_serious_crime_or_grave_misconduct =?, is_any_judicial_proceeding_is_continuing =?, is_any_misconduct_insolvency_inefficiency =?, is_employee_dies_in_terrorist_attack =?, is_employee_dies_in_accidental_death =?, is_commutation_opted =?, reason_for_retirement =?, is_eligible_for_pension =?, is_dues_present=?, is_dues_amount_decided=?, is_taken_monthly_pension_and_gratuity=?, is_taken_gratuity_commutation_terminal_benefit=?, is_taken_compensation_pension_and_gratuity=?, dies_in_extremists_dacoits_smuggler_antisocial_attack =?, is_compassionate_pension_granted=?, total_no_pay_leaves_months=?, total_no_pay_leaves_years=?, no_dues_for_avail_govt_accomodation =?, employee_group =?, bank_code =?, bank_ifsc=? WHERE workflow_header_id = ?;
       
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:          
      
      - jsonPath: $.ProcessInstances.*.state.state

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesDays

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.dues

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmploymentActive
            
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isConvictedSeriousCrimeOrGraveMisconduct

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isAnyJudicialProceedingIsContinuing

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isAnyMisconductInsolvencyInefficiency

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmployeeDiesInTerroristAttack

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmployeeDiesInAccidentalDeath

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isCommutationOpted

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.reasonForRetirement

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEligibleForPension

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDuesPresent

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDuesAmountDecided

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenMonthlyPensionAndGratuity

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenGratuityCommutationTerminalBenefit

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenCompensationPensionAndGratuity

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.diesInExtremistsDacoitsSmugglerAntisocialAttack

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isCompassionatePensionGranted

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesMonths

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesYears

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.noDuesForAvailGovtAccomodation

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeGroup

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  

    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, uuid , workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc FROM  eg_pension_employee_other_details WHERE uuid=?;
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId 

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId
                 
  - version: 1.0
    name: Save workflow data at PENDING_FOR_DETAILS_VERIFICATION state
    description: Save workflow data at PENDING_FOR_DETAILS_VERIFICATION state
    fromTopic: SAVE_PENDING_FOR_DETAILS_VERIFICATION
    isTransaction: true
    queryMaps:    

    - query: INSERT INTO eg_pension_attachment(uuid, tenantid, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.documents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType                  

      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: INSERT INTO eg_pension_attachment_audit(uuid, tenantid, pension_attachment_id, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);

      basePath: ProcessInstances.*.documents.*.documentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.documentAudit.pensionAttachmentAuditId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType     
      
      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

  - version: 1.0
    name: Save workflow data in SAVE_PENDING_FOR_DETAILS_REVIEW state
    description: Save workflow data in SAVE_PENDING_FOR_DETAILS_REVIEW state
    fromTopic: SAVE_PENDING_FOR_DETAILS_REVIEW
    isTransaction: true
    queryMaps:    

    - query: INSERT INTO eg_pension_attachment(uuid, tenantid, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.documents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType                  

      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: INSERT INTO eg_pension_attachment_audit(uuid, tenantid, pension_attachment_id, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);

      basePath: ProcessInstances.*.documents.*.documentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.documentAudit.pensionAttachmentAuditId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType     
      
      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

  - version: 1.0
    name: Save workflow data in SAVE_PENDING_FOR_CALCULATION state
    description: Save workflow data in SAVE_PENDING_FOR_CALCULATION state
    fromTopic: SAVE_PENDING_FOR_CALCULATION
    isTransaction: true
    queryMaps:    

    - query: UPDATE eg_pension_calculation_details SET workflow_state=?, basic_pension_sytem=?, pension_deductions_system=?, additional_pension_system=?, commuted_pension_system=?, commuted_value_system=?, family_pension_i_system=?, family_pension_ii_system=?, dcrg_system=?, net_deductions_system=?, final_calculated_pension_system=?, basic_pension_verified=?, pension_deductions_verified=?, additional_pension_verified=?, commuted_pension_verified=?, commuted_value_verified=?, family_pension_i_verified=?, family_pension_ii_verified=?, dcrg_verified=?, net_deductions_verified=?, final_calculated_pension_verified=?, last_modified_by=?, last_modified_date=?, interim_relief_system =?, da_system =?, interim_relief_verified =?, da_verified =?, nqs_year_system =?, nqs_month_system =?, nqs_day_system =?, nqs_year_verified =?, nqs_month_verified =?, nqs_day_verified =?, dues_deductions_system=?, compassionate_pension_system=?, compensation_pension_system=?, terminal_benefit_system=?, dues_deductions_verified=?, compassionate_pension_verified=?, compensation_pension_verified=?, terminal_benefit_verified=?, final_calculated_gratuity_system=?, final_calculated_gratuity_verified=?, family_pension_i_start_date_system=?, family_pension_i_start_date_verified=?, family_pension_i_end_date_system=?, family_pension_i_end_date_verified=?, family_pension_ii_start_date_system=?, family_pension_ii_start_date_verified=?, ex_gratia_system=?, ex_gratia_verified=?, pensioner_family_pension_system=?, pensioner_family_pension_verified=?, total_pension_system =?, total_pension_verified =?, provisional_pension_system =?, provisional_pension_verified=?, interim_relief_applicable=?, interim_relief_expression=?, basic_pension_applicable=?, basic_pension_expression=?, provisional_pension_applicable=?, provisional_pension_expression=?, compassionate_pension_applicable=?, compassionate_pension_expression=?, compensation_pension_applicable=?, compensation_pension_expression=?, commuted_pension_applicable=?, commuted_pension_expression=?, family_pension_i_applicable=?, family_pension_i_expression=?, family_pension_ii_applicable=?, family_pension_ii_expression=?, da_applicable=?, da_expression=?, additional_pension_applicable=?, additional_pension_expression=?,  total_pension_applicable=?, total_pension_expression=?, pension_deductions_applicable=?, pension_deductions_expression=?, net_deductions_applicable=?, net_deductions_expression=?, final_calculated_pension_applicable=?, final_calculated_pension_expression=?, commutation_value_applicable=?, commutation_value_expression=?, dcrg_applicable=?, dcrg_expression=?, terminal_benefit_applicable=?, terminal_benefit_expression=?, dues_deductions_applicable=?, dues_deductions_expression=?, final_calculated_gratuity_applicable=?, final_calculated_gratuity_expression=?, ex_gratia_applicable=?, ex_gratia_expression=?, pensioner_family_pension_applicable=?, pensioner_family_pension_expression=?, invalid_pension_system=?, wound_extraordinary_pension_system=?, attendant_allowance_system=?, invalid_pension_verified=?, wound_extraordinary_pension_verified=?, attendant_allowance_verified=?, invalid_pension_applicable=?, invalid_pension_expression=?, wound_extraordinary_pension_applicable=?, wound_extraordinary_pension_expression=?, attendant_allowance_applicable=?, attendant_allowance_expression=?, gqs_year_system=?, gqs_month_system=?, gqs_day_system=?, gqs_year_verified=?, gqs_month_verified=?, gqs_day_verified=?, notification_text_system=?, notification_text_verified=? WHERE workflow_header_id=?;

      basePath: ProcessInstances.*.pensionCalculationDetails
      jsonMaps:                 
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified                       

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate 

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.interimReliefSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.daSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.interimReliefVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.daVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.nqsYearSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.nqsMonthSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.nqsDaySystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.nqsYearVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.nqsMonthVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.nqsDayVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.duesDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compassionatePensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compensationPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.terminalBenefitSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.duesDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.compassionatePensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.compensationPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.terminalBenefitVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedGratuitySystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedGratuityVerified    

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIStartDateSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIStartDateVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIEndDateSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIEndDateVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIIStartDateSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIStartDateVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.exGratiaSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.exGratiaVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionerFamilyPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionerFamilyPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.totalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.totalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.provisionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.provisionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.interimReliefApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.interimReliefExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.provisionalPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.provisionalPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compassionatePensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compassionatePensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compensationPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.compensationPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIIApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIIExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.daApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.daExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.additionalPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.additionalPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.totalPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.totalPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionExpression     

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutationValueApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutationValueExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.terminalBenefitApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.terminalBenefitExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.duesDeductionsApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.duesDeductionsExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedGratuityApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedGratuityExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.exGratiaApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.exGratiaExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionerFamilyPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionerFamilyPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.invalidPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.woundExtraordinaryPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.attendantAllowanceSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.invalidPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.woundExtraordinaryPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.attendantAllowanceVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.invalidPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.invalidPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.woundExtraordinaryPensionApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.woundExtraordinaryPensionExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.attendantAllowanceApplicable

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.attendantAllowanceExpression

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.gqsYearSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.gqsMonthSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.gqsDaySystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.gqsYearVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.gqsMonthVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.gqsDayVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.notificationTextSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.notificationTextVerified
      
      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, created_date, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified) SELECT ?, tenantid, uuid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, ?, ?, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified FROM eg_pension_calculation_details WHERE workflow_header_id=?;

      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId 
      
    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

  - version: 1.0
    name: Clear benefit when Clerk send back to Senior Asistant
    description: Clear benefit when Clerk send back to Senior Asistant
    fromTopic: CLEAR_BENEFIT
    isTransaction: true
    queryMaps:    

    - query: UPDATE eg_pension_calculation_details SET workflow_state=?, basic_pension_sytem=null, pension_deductions_system=null, additional_pension_system=null, commuted_pension_system=null, commuted_value_system=null, family_pension_i_system=null, family_pension_ii_system=null, dcrg_system=null, net_deductions_system=null, final_calculated_pension_system=null, basic_pension_verified=null, pension_deductions_verified=null, additional_pension_verified=null, commuted_pension_verified=null, commuted_value_verified=null, family_pension_i_verified=null, family_pension_ii_verified=null, dcrg_verified=null, net_deductions_verified=null, final_calculated_pension_verified=null, active=true, last_modified_by=?, last_modified_date=?, interim_relief_system=null, da_system=null, interim_relief_verified=null, da_verified=null, nqs_year_system=null, nqs_month_system=null, nqs_day_system=null, nqs_year_verified=null, nqs_month_verified=null, nqs_day_verified=null, dues_deductions_system=null, compassionate_pension_system=null, compensation_pension_system=null, terminal_benefit_system=null, dues_deductions_verified=null, compassionate_pension_verified=null, compensation_pension_verified=null, terminal_benefit_verified=null, final_calculated_gratuity_system=null, final_calculated_gratuity_verified=null, family_pension_i_start_date_system=null, family_pension_i_start_date_verified=null, family_pension_i_end_date_system=null, family_pension_i_end_date_verified=null, family_pension_ii_start_date_system=null, family_pension_ii_start_date_verified=null, ex_gratia_system=null, ex_gratia_verified=null, pensioner_family_pension_system=null, pensioner_family_pension_verified=null, total_pension_system=null, total_pension_verified=null, provisional_pension_system=null, provisional_pension_verified=null, interim_relief_applicable=false, interim_relief_expression=null, basic_pension_applicable=false, basic_pension_expression=null, provisional_pension_applicable=false, provisional_pension_expression=null, compassionate_pension_applicable=false, compassionate_pension_expression=null, compensation_pension_applicable=false, compensation_pension_expression=null, commuted_pension_applicable=false, commuted_pension_expression=null, family_pension_i_applicable=false, family_pension_i_expression=null, family_pension_ii_applicable=false, family_pension_ii_expression=null, da_applicable=false, da_expression=null, additional_pension_applicable=false, additional_pension_expression=null, total_pension_applicable=false, total_pension_expression=null, pension_deductions_applicable=false, pension_deductions_expression=null, net_deductions_applicable=false, net_deductions_expression=null, final_calculated_pension_applicable=false, final_calculated_pension_expression=null, commutation_value_applicable=false, commutation_value_expression=null, dcrg_applicable=false, dcrg_expression=null, terminal_benefit_applicable=false, terminal_benefit_expression=null, dues_deductions_applicable=false, dues_deductions_expression=null, final_calculated_gratuity_applicable=false, final_calculated_gratuity_expression=null, ex_gratia_applicable=false, ex_gratia_expression=null, pensioner_family_pension_applicable=false, pensioner_family_pension_expression=null, invalid_pension_system=null, wound_extraordinary_pension_system=null, attendant_allowance_system=null, invalid_pension_verified=null, wound_extraordinary_pension_verified=null, attendant_allowance_verified=null, invalid_pension_applicable=null, invalid_pension_expression=null, wound_extraordinary_pension_applicable=false, wound_extraordinary_pension_expression=null, attendant_allowance_applicable=false, attendant_allowance_expression=null, gqs_year_system=null, gqs_month_system=null, gqs_day_system=null, gqs_year_verified=null, gqs_month_verified=null, gqs_day_verified=null, notification_text_system=null, notification_text_verified=null WHERE workflow_header_id=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 
      
      - jsonPath: $.ProcessInstances.*.workflowHeader.state                    

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate       
      
      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, created_date, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified) SELECT ?, tenantid, uuid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, ?, ?, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified FROM eg_pension_calculation_details WHERE workflow_header_id=?;

      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId 
      
    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

  - version: 1.0
    name: Save workflow data at PENDING_FOR_CALCULATION_REVIEW state
    description: Save workflow data at PENDING_FOR_CALCULATION_REVIEW state
    fromTopic: SAVE_PENDING_FOR_CALCULATION_REVIEW
    isTransaction: true
    queryMaps:    

    - query: INSERT INTO eg_pension_attachment(uuid, tenantid, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.documents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType                  

      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: INSERT INTO eg_pension_attachment_audit(uuid, tenantid, pension_attachment_id, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);

      basePath: ProcessInstances.*.documents.*.documentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.documentAudit.pensionAttachmentAuditId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType     
      
      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId


  - version: 1.0
    name: Claim Workflow
    description: Claim Workflow
    fromTopic: CLAIM_WORKFLOW
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_workflow_header SET assignee = ?, last_modified_by = ?, last_modified_date = ? WHERE active = true AND application_number = ?;

      basePath: ProcessInstances.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy     
           
      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.businessId 
    
    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, created_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE active = true AND application_number = ?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId          

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.businessId

  - version: 1.0
    name: Release Workflow
    description: Release Workflow
    fromTopic: RELEASE_WORKFLOW
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_workflow_header SET assignee = null, last_modified_by = ?, last_modified_date = ? WHERE active = true AND application_number = ?;

      basePath: ProcessInstances.*
      jsonMaps:              
            
      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.businessId 
    
    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, created_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE active = true AND application_number = ?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId          

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.businessId

  - version: 1.0
    name: Save Employee(s) to Pension Module
    description: Save Employee(s) to Pension Module
    fromTopic: SAVE_EMPLOYEES
    isTransaction: true
    queryMaps:
  
    - query: INSERT INTO eg_pension_employee(uuid, tenantid, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, last_modified_by, created_date, last_modified_date, employee_hrms_uuid, salutation, gender, employee_status, employee_type, date_of_appointment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);              

      basePath: Employee
      jsonMaps:

      - jsonPath: $.Employee.pensionEmployeeId   

      - jsonPath: $.Employee.tenantId

      - jsonPath: $.Employee.id     

      - jsonPath: $.Employee.code   

      - jsonPath: $.Employee.name

      - jsonPath: $.Employee.dob

      - jsonPath: $.Employee.dateOfRetirement

      - jsonPath: $.Employee.dateOfDeath     

      - jsonPath: $.Employee.active      

      - jsonPath: $.Employee.auditDetails.createdBy

      - jsonPath: $.Employee.auditDetails.lastModifiedBy

      - jsonPath: $.Employee.auditDetails.createdDate

      - jsonPath: $.Employee.auditDetails.lastModifiedDate

      - jsonPath: $.Employee.uuid     

      - jsonPath: $.Employee.user.salutation

      - jsonPath: $.Employee.user.gender

      - jsonPath: $.Employee.employeeStatus

      - jsonPath: $.Employee.employeeType

      - jsonPath: $.Employee.dateOfAppointment
          
    - query: INSERT INTO eg_pension_employee_audit(uuid, tenantid, pension_employee_id, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, last_modified_by, created_date, last_modified_date, employee_hrms_uuid, salutation, gender, employee_status, employee_type, date_of_appointment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        
      basePath: Employee
      jsonMaps:

      - jsonPath: $.Employee.auditUuid  

      - jsonPath: $.Employee.tenantId

      - jsonPath: $.Employee.pensionEmployeeId  

      - jsonPath: $.Employee.id     

      - jsonPath: $.Employee.code   

      - jsonPath: $.Employee.name

      - jsonPath: $.Employee.dob

      - jsonPath: $.Employee.dateOfRetirement

      - jsonPath: $.Employee.dateOfDeath     

      - jsonPath: $.Employee.active      

      - jsonPath: $.Employee.auditDetails.createdBy

      - jsonPath: $.Employee.auditDetails.lastModifiedBy

      - jsonPath: $.Employee.auditDetails.createdDate

      - jsonPath: $.Employee.auditDetails.lastModifiedDate

      - jsonPath: $.Employee.uuid     

      - jsonPath: $.Employee.user.salutation

      - jsonPath: $.Employee.user.gender

      - jsonPath: $.Employee.employeeStatus

      - jsonPath: $.Employee.employeeType

      - jsonPath: $.Employee.dateOfAppointment

    - query: INSERT INTO eg_pension_employee_contact_details(uuid, tenantid, pension_employee_id, mobile_number, email_id, alt_contact_number, pan, aadhaar_number, permanent_address, permanent_city, permanent_pin_code, correspondence_address, correspondence_city, correspondence_pin_code, father_or_husband_name, blood_group, identification_mark, active, created_by, created_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: Employee.user
      jsonMaps:

      - jsonPath: $.Employee.user.employeeContactDetailsId

      - jsonPath: $.Employee.user.tenantId

      - jsonPath: $.Employee.pensionEmployeeId 
      
      - jsonPath: $.Employee.user.mobileNumber  

      - jsonPath: $.Employee.user.emailId

      - jsonPath: $.Employee.user.altContactNumber

      - jsonPath: $.Employee.user.pan

      - jsonPath: $.Employee.user.aadhaarNumber

      - jsonPath: $.Employee.user.permanentAddress

      - jsonPath: $.Employee.user.permanentCity

      - jsonPath: $.Employee.user.permanentPinCode

      - jsonPath: $.Employee.user.correspondenceAddress

      - jsonPath: $.Employee.user.correspondenceCity

      - jsonPath: $.Employee.user.correspondencePinCode    
      
      - jsonPath: $.Employee.user.fatherOrHusbandName

      - jsonPath: $.Employee.user.bloodGroup

      - jsonPath: $.Employee.user.identificationMark

      - jsonPath: $.Employee.user.active

      - jsonPath: $.Employee.auditDetails.createdBy      

      - jsonPath: $.Employee.auditDetails.createdDate

    - query: INSERT INTO eg_pension_employee_assignment(uuid, tenantid, pension_employee_id, position, department, designation, from_date, to_date, govt_order_no, reporting_to, is_hod, is_current_assignment, active, created_by, created_date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ;

      basePath: Employee.assignments.*
      jsonMaps:

      - jsonPath: $.Employee.assignments.*.id   

      - jsonPath: $.Employee.assignments.*.tenantId

      - jsonPath: $.Employee.assignments.*.pensionEmployeeId 
      
      - jsonPath: $.Employee.assignments.*.position  
      
      - jsonPath: $.Employee.assignments.*.department 
      
      - jsonPath: $.Employee.assignments.*.designation                  

      - jsonPath: $.Employee.assignments.*.fromDate      

      - jsonPath: $.Employee.assignments.*.toDate

      - jsonPath: $.Employee.assignments.*.govtOrderNumber

      - jsonPath: $.Employee.assignments.*.reportingTo

      - jsonPath: $.Employee.assignments.*.isHOD

      - jsonPath: $.Employee.assignments.*.isCurrentAssignment

      - jsonPath: $.Employee.assignments.*.active

      - jsonPath: $.Employee.auditDetails.createdBy      

      - jsonPath: $.Employee.auditDetails.createdDate

    - query: INSERT INTO eg_pension_employee_service_history(uuid, tenantid, pension_employee_id, service_status, service_from, service_to, order_no, location, is_current_position, active, created_by, created_date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: Employee.serviceHistory.*
      jsonMaps:

      - jsonPath: $.Employee.serviceHistory.*.id   

      - jsonPath: $.Employee.serviceHistory.*.tenantId

      - jsonPath: $.Employee.serviceHistory.*.pensionEmployeeId 
      
      - jsonPath: $.Employee.serviceHistory.*.serviceStatus  
      
      - jsonPath: $.Employee.serviceHistory.*.serviceFrom 
      
      - jsonPath: $.Employee.serviceHistory.*.serviceTo                  

      - jsonPath: $.Employee.serviceHistory.*.orderNo      

      - jsonPath: $.Employee.serviceHistory.*.location

      - jsonPath: $.Employee.serviceHistory.*.isCurrentPosition      

      - jsonPath: $.Employee.serviceHistory.*.active

      - jsonPath: $.Employee.auditDetails.createdBy      

      - jsonPath: $.Employee.auditDetails.createdDate
                  
  - version: 1.0
    name: Initiate Death of an Employee Workflow
    description: Initiate Death of an Employee Workflow
    fromTopic: DOE_INITIATE
    isTransaction: true
    queryMaps:

    - query: INSERT INTO eg_pension_employee(uuid, tenantid, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, created_date, employee_hrms_uuid, salutation, gender, employee_status, employee_type, date_of_appointment) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee WHERE uuid=?);              

      basePath: ProcessInstances.*.employee
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId   

      - jsonPath: $.ProcessInstances.*.employee.tenantId

      - jsonPath: $.ProcessInstances.*.employee.id     

      - jsonPath: $.ProcessInstances.*.employee.code   

      - jsonPath: $.ProcessInstances.*.employee.name

      - jsonPath: $.ProcessInstances.*.employee.dob

      - jsonPath: $.ProcessInstances.*.employee.dateOfRetirement

      - jsonPath: $.ProcessInstances.*.employee.dateOfDeath     

      - jsonPath: $.ProcessInstances.*.employee.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy 

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.uuid     

      - jsonPath: $.ProcessInstances.*.employee.user.salutation

      - jsonPath: $.ProcessInstances.*.employee.user.gender

      - jsonPath: $.ProcessInstances.*.employee.employeeStatus

      - jsonPath: $.ProcessInstances.*.employee.employeeType

      - jsonPath: $.ProcessInstances.*.employee.dateOfAppointment

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId

    - query: INSERT INTO eg_pension_employee_contact_details(uuid, tenantid, pension_employee_id, mobile_number, email_id, alt_contact_number, pan, aadhaar_number, permanent_address, permanent_city, permanent_pin_code, correspondence_address, correspondence_city, correspondence_pin_code, father_or_husband_name, blood_group, identification_mark, active, created_by, created_date) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_contact_details WHERE pension_employee_id=?); 

      basePath: ProcessInstances.*.employee.user
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.user.employeeContactDetailsId

      - jsonPath: $.ProcessInstances.*.employee.user.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.user.mobileNumber  

      - jsonPath: $.ProcessInstances.*.employee.user.emailId

      - jsonPath: $.ProcessInstances.*.employee.user.altContactNumber

      - jsonPath: $.ProcessInstances.*.employee.user.pan

      - jsonPath: $.ProcessInstances.*.employee.user.aadhaarNumber

      - jsonPath: $.ProcessInstances.*.employee.user.permanentAddress

      - jsonPath: $.ProcessInstances.*.employee.user.permanentCity

      - jsonPath: $.ProcessInstances.*.employee.user.permanentPinCode

      - jsonPath: $.ProcessInstances.*.employee.user.correspondenceAddress

      - jsonPath: $.ProcessInstances.*.employee.user.correspondenceCity

      - jsonPath: $.ProcessInstances.*.employee.user.correspondencePinCode    
      
      - jsonPath: $.ProcessInstances.*.employee.user.fatherOrHusbandName

      - jsonPath: $.ProcessInstances.*.employee.user.bloodGroup

      - jsonPath: $.ProcessInstances.*.employee.user.identificationMark

      - jsonPath: $.ProcessInstances.*.employee.user.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy 

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId 

    - query: INSERT INTO eg_pension_employee_assignment(uuid, tenantid, pension_employee_id, position, department, designation, from_date, to_date, govt_order_no, reporting_to, is_hod, is_current_assignment, active, created_by, created_date, is_primary_assignment, is_pension_applicable) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_assignment WHERE pension_employee_id=?); 

      basePath: ProcessInstances.*.employee.assignments.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.id   

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.position  
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.department 
      
      - jsonPath: $.ProcessInstances.*.employee.assignments.*.designation                  

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.fromDate      

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.toDate

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.govtOrderNumber

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.reportingTo

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isHOD

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isCurrentAssignment

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy 

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isPrimaryAssignment

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.isPensionApplicable

      - jsonPath: $.ProcessInstances.*.employee.assignments.*.pensionEmployeeId

    - query: INSERT INTO eg_pension_employee_service_history(uuid, tenantid, pension_employee_id, service_status, service_from, service_to, order_no, location, is_current_position, active, created_by, created_date) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? WHERE NOT EXISTS(SELECT 1 FROM eg_pension_employee_service_history WHERE pension_employee_id=?); 

      basePath: ProcessInstances.*.employee.serviceHistory.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.id   

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.pensionEmployeeId 
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceStatus  
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceFrom 
      
      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.serviceTo                  

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.orderNo      

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.location

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.isCurrentPosition      

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.serviceHistory.*.pensionEmployeeId 

    - query: UPDATE eg_pension_employee SET date_of_death = ?, last_modified_by = ?,  last_modified_date = ? WHERE uuid = ?;
        
      basePath: ProcessInstances.*.employee
      jsonMaps:               

      - jsonPath: $.ProcessInstances.*.employee.dateOfDeath

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId

    - query: INSERT INTO eg_pension_employee_audit(uuid, tenantid, pension_employee_id, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, created_date) SELECT ?, tenantid, uuid, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, ?, ? FROM eg_pension_employee WHERE uuid = ?;
        
      basePath: ProcessInstances.*.employee.employeeAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.employeeAudit.pensionEmployeeAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId 

    - query: INSERT INTO eg_pension_workflow_header(uuid, tenantid, pension_employee_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate       

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state 
    
    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state 

    - query: INSERT INTO eg_pension_employee_other_details(uuid, tenantid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, bank_code, bank_ifsc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
        
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state 
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.claimant

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode  

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc
    
    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, bank_code, bank_ifsc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state 
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.claimant

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate   
      
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc
     
    - query: INSERT INTO eg_pension_calculation_details(uuid, tenantid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate 

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

  - version: 1.0
    name: Save workflow data at INITIATED state
    description: Save workflow data at INITIATED state
    fromTopic: SAVE_DEATH_INITIATED
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_attachment SET active = false, last_modified_by = ?, last_modified_date = ? WHERE document_type = ? AND workflow_header_id = ?;
        
      basePath: ProcessInstances.*.documents.*
      jsonMaps:                   

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.documents.*.documentType  

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  

    - query: INSERT INTO eg_pension_attachment(uuid, tenantid, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.documents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType                  

      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

    - query: INSERT INTO eg_pension_attachment_audit(uuid, tenantid, pension_attachment_id, workflow_header_id, file_store_id, document_type, state, comment, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?);

      basePath: ProcessInstances.*.documents.*.documentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.documents.*.documentAudit.pensionAttachmentAuditId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.documents.*.pensionAttachmentId

      - jsonPath: $.ProcessInstances.*.documents.*.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.documents.*.fileStoreId 
      
      - jsonPath: $.ProcessInstances.*.documents.*.documentType     
      
      - jsonPath: $.ProcessInstances.*.documents.*.state

      - jsonPath: $.ProcessInstances.*.documents.*.comment

      - jsonPath: $.ProcessInstances.*.documents.*.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate    

    - query: UPDATE eg_pension_employee_other_details SET workflow_state = ?, ltc = ?, lpd = ?, pension_arrear = ?, is_da_medical_admissible = ?, fma = ?, medical_relief = ?, miscellaneous = ?, over_payment = ?, income_tax = ?, cess = ?, bank_address = ?,  account_number = ?, wef = ?, last_modified_by = ?,  last_modified_date = ?, total_no_pay_leaves_days =?, dues =?, is_employment_active =?, is_convicted_serious_crime_or_grave_misconduct =?, is_any_judicial_proceeding_is_continuing =?, is_any_misconduct_insolvency_inefficiency =?, is_employee_dies_in_terrorist_attack =?, is_employee_dies_in_accidental_death =?, is_commutation_opted =?, reason_for_retirement =?, is_eligible_for_pension =?, is_dues_present=?, is_dues_amount_decided=?, is_taken_monthly_pension_and_gratuity=?, is_taken_gratuity_commutation_terminal_benefit=?, is_taken_compensation_pension_and_gratuity=?, dies_in_extremists_dacoits_smuggler_antisocial_attack =?, is_compassionate_pension_granted =?, total_no_pay_leaves_months=?, total_no_pay_leaves_years=?, no_dues_for_avail_govt_accomodation =?, employee_group =?, bank_code=?, bank_ifsc=? WHERE workflow_header_id = ?;
       
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:          
      
      - jsonPath: $.ProcessInstances.*.state.state

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.ltc

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.lpd      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.pensionArrear      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDaMedicalAdmissible

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.fma

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.medicalRelief

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.miscellaneous

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.overPayment

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.incomeTax

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.cess

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankAddress

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.accountNumber      

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.wef         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesDays

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.dues

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmploymentActive
            
      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isConvictedSeriousCrimeOrGraveMisconduct

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isAnyJudicialProceedingIsContinuing

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isAnyMisconductInsolvencyInefficiency

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmployeeDiesInTerroristAttack

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEmployeeDiesInAccidentalDeath

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isCommutationOpted

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.reasonForRetirement

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isEligibleForPension

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDuesPresent

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isDuesAmountDecided

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenMonthlyPensionAndGratuity

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenGratuityCommutationTerminalBenefit

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isTakenCompensationPensionAndGratuity

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.diesInExtremistsDacoitsSmugglerAntisocialAttack

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.isCompassionatePensionGranted

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesMonths

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.totalNoPayLeavesYears

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.noDuesForAvailGovtAccomodation

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeGroup

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankCode

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.bankIfsc

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  

    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, uuid , workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc FROM  eg_pension_employee_other_details WHERE uuid=?;
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId 

    - query: UPDATE eg_pension_dependent SET active = false, last_modified_by = ?,  last_modified_date = ? WHERE pension_employee_id = ?;
        
      basePath: ProcessInstances.*.employee
      jsonMaps:                   

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId

    - query: INSERT INTO eg_pension_dependent(uuid, tenantid, pension_employee_id, name, dob, address, mobile_number, relationship, is_disabled, marital_status, is_holly_dependent, no_spouse_no_children, is_grandchild_from_deceased_son, is_eligible_for_gratuity, is_eligible_for_pension, active, created_by, created_date, gratuity_percentage, bank_account_number, bank_details, bank_code, bank_ifsc) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.dependents.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.dependents.*.dependentId   

      - jsonPath: $.ProcessInstances.*.dependents.*.tenantId
      
      - jsonPath: $.ProcessInstances.*.dependents.*.pensionEmployeeId  
      
      - jsonPath: $.ProcessInstances.*.dependents.*.name 
      
      - jsonPath: $.ProcessInstances.*.dependents.*.dob                  

      - jsonPath: $.ProcessInstances.*.dependents.*.address      

      - jsonPath: $.ProcessInstances.*.dependents.*.mobileNumber

      - jsonPath: $.ProcessInstances.*.dependents.*.relationship

      - jsonPath: $.ProcessInstances.*.dependents.*.isDisabled

      - jsonPath: $.ProcessInstances.*.dependents.*.maritalStatus

      - jsonPath: $.ProcessInstances.*.dependents.*.isHollyDependent

      - jsonPath: $.ProcessInstances.*.dependents.*.noSpouseNoChildren

      - jsonPath: $.ProcessInstances.*.dependents.*.isGrandChildFromDeceasedSon

      - jsonPath: $.ProcessInstances.*.dependents.*.isEligibleForGratuity

      - jsonPath: $.ProcessInstances.*.dependents.*.isEligibleForPension

      - jsonPath: $.ProcessInstances.*.dependents.*.active

      - jsonPath: $.ProcessInstances.*.dependents.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.dependents.*.auditDetails.createdDate 

      - jsonPath: $.ProcessInstances.*.dependents.*.gratuityPercentage

      - jsonPath: $.ProcessInstances.*.dependents.*.bankAccountNumber

      - jsonPath: $.ProcessInstances.*.dependents.*.bankDetails

      - jsonPath: $.ProcessInstances.*.dependents.*.bankCode

      - jsonPath: $.ProcessInstances.*.dependents.*.bankIfsc
      
    - query: INSERT INTO eg_pension_dependent_audit(uuid, tenantid, dependent_id, pension_employee_id, name, dob, address, mobile_number, relationship, is_disabled, marital_status, is_holly_dependent, no_spouse_no_children, is_grandchild_from_deceased_son, is_eligible_for_gratuity, is_eligible_for_pension, active, created_by, created_date, gratuity_percentage, bank_account_number, bank_details, bank_code, bank_ifsc) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?);

      basePath: ProcessInstances.*.dependents.*.dependentAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.dependents.*.dependentAudit.dependentAuditId   

      - jsonPath: $.ProcessInstances.*.dependents.*.tenantId

      - jsonPath: $.ProcessInstances.*.dependents.*.dependentId 
      
      - jsonPath: $.ProcessInstances.*.dependents.*.pensionEmployeeId       
      
      - jsonPath: $.ProcessInstances.*.dependents.*.name 
      
      - jsonPath: $.ProcessInstances.*.dependents.*.dob                  

      - jsonPath: $.ProcessInstances.*.dependents.*.address      

      - jsonPath: $.ProcessInstances.*.dependents.*.mobileNumber

      - jsonPath: $.ProcessInstances.*.dependents.*.relationship

      - jsonPath: $.ProcessInstances.*.dependents.*.isDisabled

      - jsonPath: $.ProcessInstances.*.dependents.*.maritalStatus

      - jsonPath: $.ProcessInstances.*.dependents.*.isHollyDependent

      - jsonPath: $.ProcessInstances.*.dependents.*.noSpouseNoChildren

      - jsonPath: $.ProcessInstances.*.dependents.*.isGrandChildFromDeceasedSon

      - jsonPath: $.ProcessInstances.*.dependents.*.isEligibleForGratuity

      - jsonPath: $.ProcessInstances.*.dependents.*.isEligibleForPension

      - jsonPath: $.ProcessInstances.*.dependents.*.active

      - jsonPath: $.ProcessInstances.*.dependents.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.dependents.*.auditDetails.createdDate 

      - jsonPath: $.ProcessInstances.*.dependents.*.gratuityPercentage

      - jsonPath: $.ProcessInstances.*.dependents.*.bankAccountNumber

      - jsonPath: $.ProcessInstances.*.dependents.*.bankDetails

      - jsonPath: $.ProcessInstances.*.dependents.*.bankCode

      - jsonPath: $.ProcessInstances.*.dependents.*.bankIfsc

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId
      
     
  - version: 1.0
    name: Initiate Death of an Pensioner Workflow
    description: Initiate Death of an Pensioner Workflow
    fromTopic: DOP_INITIATE
    isTransaction: true
    queryMaps:    

    - query: UPDATE eg_pension_employee SET date_of_death = ?, last_modified_by = ?,  last_modified_date = ? WHERE employee_hrms_code = ?;
        
      basePath: ProcessInstances.*.employee
      jsonMaps:               

      - jsonPath: $.ProcessInstances.*.employee.dateOfDeath

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.code

    - query: INSERT INTO eg_pension_employee_audit(uuid, tenantid, pension_employee_id, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, created_by, created_date) SELECT ?, tenantid, uuid, employee_hrms_id, employee_hrms_code, name, date_of_birth, date_of_retirement, date_of_death, active, ?, ? FROM eg_pension_employee WHERE employee_hrms_code = ?;
        
      basePath: ProcessInstances.*.employee.employeeAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employee.employeeAudit.pensionEmployeeAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.employee.code 

    - query: INSERT INTO eg_pension_workflow_header(uuid, tenantid, pension_employee_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate       

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state   
    
    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state  

    - query: INSERT INTO eg_pension_employee_other_details(uuid, tenantid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, ?, ?, ?, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, null, ?, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, null, bank_code, bank_ifsc FROM eg_pension_employee_other_details WHERE workflow_header_id=(select uuid from eg_pension_workflow_header where workflow_type='RRP_SERVICE' and workflow_state='CLOSED' and pension_employee_id=? order by last_modified_date desc limit 1);
        
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state                     

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId
    
    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, uuid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc FROM eg_pension_employee_other_details WHERE uuid=?; 
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId           

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate    

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId
     
    - query: INSERT INTO eg_pension_calculation_details(uuid, tenantid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate 

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);             
        
      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId  
      
      - jsonPath: $.ProcessInstances.*.state.state             
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.basicPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionDeductionsSystem

      - jsonPath: $ProcessInstances.*.pensionCalculationDetails.additionalPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedPensionSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.commutedValueSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.familyPensionIISystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.dcrgSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.netDeductionsSystem

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.finalCalculatedPensionSystem      
      
      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.basicPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.pensionDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.additionalPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedPensionVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.commutedValueVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.familyPensionIIVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.dcrgVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.netDeductionsVerified

      - jsonPath: $.ProcessInstances.*.pensionCalculationUpdateDetails.finalCalculatedPensionVerified      

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

  
  - version: 1.0
    name: Save workflow data at CLOSED state
    description: Save workflow data at CLOSED state
    fromTopic: SAVE_CLOSED
    isTransaction: true
    queryMaps:  
    
    - query: UPDATE eg_pension_employee_other_details SET date_of_contingent=?, last_modified_by=?, last_modified_date=? WHERE workflow_header_id=?; 

      basePath: ProcessInstances.*
      jsonMaps:
     
      - jsonPath: $.ProcessInstances.*.dateOfContingent

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy                

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate      

      - jsonPath: $.ProcessInstances.*.workflowHeaderId

    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, uuid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc FROM eg_pension_employee_other_details WHERE workflow_header_id=?;

      basePath: ProcessInstances.*
      jsonMaps:
     
      - jsonPath: $.ProcessInstances.*.employeeOtherDetailsAuditId

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate  

      - jsonPath: $.ProcessInstances.*.workflowHeaderId
    
    - query: UPDATE eg_pension_pensioner SET active=false, last_modified_by =?, last_modified_date =? WHERE pension_employee_id=?;

      basePath: ProcessInstances.*
      jsonMaps:
     
      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy                

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate      

      - jsonPath: $.ProcessInstances.*.pensionEmployeeId

    - query: INSERT INTO eg_pension_pensioner(uuid, tenantid, pension_employee_id, active, created_by, last_modified_by, created_date, last_modified_date, business_service, dependent_id, pensioner_number) SELECT ?, ?, ? , true, ?, ?, ? ,?, ?, ?, ?;

      basePath: ProcessInstances.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionerId   

      - jsonPath: $.ProcessInstances.*.tenantId      

      - jsonPath: $.ProcessInstances.*.pensionEmployeeId   

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate      
      
      - jsonPath: $.ProcessInstances.*.businessService  

      - jsonPath: $.ProcessInstances.*.dependentId

      - jsonPath: $.ProcessInstances.*.pensionerNumber       

    - query: INSERT INTO eg_pension_pensioner_audit(uuid, pensioner_id, tenantid, pension_employee_id, active, created_by, last_modified_by, created_date, last_modified_date, business_service, dependent_id, pensioner_number) SELECT ?, uuid, tenantid, pension_employee_id, true, ?, ?, ?, ?, business_service, dependent_id, pensioner_number FROM eg_pension_pensioner WHERE uuid =?;

      basePath: ProcessInstances.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionerAuditId             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.pensionerId   

    - query: INSERT INTO eg_pension_pensioner_final_calculated_benefit(uuid, tenantid, pensioner_id, basic_pension, pension_deductions, additional_pension, commuted_pension, commuted_value, family_pension_i, family_pension_ii, dcrg, net_deductions, final_calculated_pension, interim_relief, da, nqs_year, nqs_month, nqs_day, dues_deductions, compassionate_pension, compensation_pension, terminal_benefit, final_calculated_gratuity, family_pension_i_start_date, family_pension_i_end_date, family_pension_ii_start_date, ex_gratia, pensioner_family_pension, total_pension, provisional_pension, active, created_by, last_modified_by, created_date, last_modified_date, wound_extraordinary_pension, attendant_allowance, invalid_pension) SELECT ?, ?, ?, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, interim_relief_verified, da_verified, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_verified, family_pension_i_start_date_verified, family_pension_i_end_date_verified, family_pension_ii_start_date_verified, ex_gratia_verified, pensioner_family_pension_verified, total_pension_verified, provisional_pension_verified, true, ?, ?, ?, ?, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_verified FROM eg_pension_calculation_details WHERE workflow_header_id = ?;  

      basePath: ProcessInstances.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionerFinalCalculatedBenefitId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.pensionerId            

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeaderId

    - query: INSERT INTO eg_pension_pensioner_application_details(uuid, tenantid, pensioner_id, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, total_no_pay_leaves_days, total_no_pay_leaves_months, total_no_pay_leaves_years, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, no_dues_for_avail_govt_accomodation, employee_group, active, created_by, last_modified_by, created_date, last_modified_date, date_of_contingent, bank_code, bank_ifsc) SELECT ?, ?, ?, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, total_no_pay_leaves_days, total_no_pay_leaves_months, total_no_pay_leaves_years, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, no_dues_for_avail_govt_accomodation, employee_group, true, ?, ?, ?, ?, date_of_contingent, bank_code, bank_ifsc FROM eg_pension_employee_other_details WHERE workflow_header_id=?;

      basePath: ProcessInstances.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionerApplicationDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.pensionerId            

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeaderId

    - query: INSERT INTO eg_pension_revision(uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, last_modified_by, created_date, last_modified_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, wound_extraordinary_pension, attendant_allowance) SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, ? ,?, interim_relief, da, total_pension, pension_deductions, uuid, wound_extraordinary_pension, attendant_allowance FROM eg_pension_pensioner_final_calculated_benefit WHERE uuid = ?;  

      basePath: ProcessInstances.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionRevisionId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.pensionerId      

      - jsonPath: $.ProcessInstances.*.effectiveStartYear  

      - jsonPath: $.ProcessInstances.*.effectiveStartMonth 

      - jsonPath: $.ProcessInstances.*.effectiveEndYear 

      - jsonPath: $.ProcessInstances.*.effectiveEndMonth 

      - jsonPath: $.ProcessInstances.*.pensionArrear 

      - jsonPath: $.ProcessInstances.*.fma

      - jsonPath: $.ProcessInstances.*.miscellaneous

      - jsonPath: $.ProcessInstances.*.overPayment

      - jsonPath: $.ProcessInstances.*.incomeTax

      - jsonPath: $.ProcessInstances.*.cess

      - jsonPath: $.ProcessInstances.*.basicPension

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.pensionerFinalCalculatedBenefitId   

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: ProcessInstances.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.pensionRevisionAuditId            

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate      

      - jsonPath: $.ProcessInstances.*.pensionRevisionId    

    
  - version: 1.0
    name: Update Revised Pension
    description: Update Revised Pension
    fromTopic: UPDATE_REVISED_PENSION
    isTransaction: true
    queryMaps:  
    
    - query: UPDATE eg_pension_revision SET effective_end_year=?, effective_end_month=?, last_modified_by=?, last_modified_date=? WHERE uuid =?;

      basePath: ProcessInstances.*.lastPensionRevision.*
      jsonMaps:      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.effectiveEndYear      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.effectiveEndMonth                  

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: ProcessInstances.*.lastPensionRevision.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionAuditId            

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdDate          

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionId
        
    - query: UPDATE eg_pension_revision SET effective_start_year=?, effective_start_month=?, effective_end_year=?, effective_end_month=?, pension_arrear=?, fma=?, miscellaneous=?, over_payment=?, income_tax=?, cess=?, basic_pension=?, additional_pension=?, commuted_pension=?, net_deductions=?, final_calculated_pension=?, last_modified_by=?, last_modified_date=?, interim_relief=?, da=?, total_pension=?, pension_deductions =?, remarks =?, wound_extraordinary_pension=?, attendant_allowance=? WHERE uuid =?;    

      basePath: ProcessInstances.*.pensionRevision.*
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveStartYear

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveStartMonth

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveEndYear      

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveEndMonth  

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionArrear       

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.fma  

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.miscellaneous
     
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.overPayment

      - jsonPath: $.PProcessInstances.*.pensionRevision.*.incomeTax

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.cess

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.basicPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.additionalPension    

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.commutedPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.netDeductions

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.finalCalculatedPension 

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdDate                                      
             
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.interimRelief

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.da

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.totalPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionDeductions

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.remarks

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.woundExtraordinaryPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.attendantAllowance

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: ProcessInstances.*.pensionRevision.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionAuditId            

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdDate          

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionId

  - version: 1.0
    name: Create Revised Pension
    description: Create Revised Pension
    fromTopic: CREATE_REVISED_PENSION
    isTransaction: true
    queryMaps:   
        
    - query: UPDATE eg_pension_revision SET effective_end_year=?, effective_end_month=?, last_modified_by=?, last_modified_date=? WHERE uuid =?;

      basePath: ProcessInstances.*.lastPensionRevision.*
      jsonMaps:      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.effectiveEndYear      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.effectiveEndMonth                  

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: ProcessInstances.*.lastPensionRevision.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionAuditId            

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.auditDetails.createdDate          

      - jsonPath: $.ProcessInstances.*.lastPensionRevision.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision(uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, last_modified_by, created_date, last_modified_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, true, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.pensionRevision.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionId

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.tenantId

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionerId     

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveStartYear

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveStartMonth

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveEndYear      

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.effectiveEndMonth  

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionArrear 

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.fma

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.miscellaneous
     
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.overPayment

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.incomeTax

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.cess

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.basicPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.additionalPension          

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.commutedPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.netDeductions

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.finalCalculatedPension              

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.lastModifiedDate
      
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.interimRelief

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.da

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.totalPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionDeductions

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionerFinalCalculatedBenefitId

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.remarks

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.woundExtraordinaryPension

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.attendantAllowance

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: ProcessInstances.*.pensionRevision.*
      jsonMaps:
      
      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionAuditId            

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.auditDetails.createdDate          

      - jsonPath: $.ProcessInstances.*.pensionRevision.*.pensionRevisionId

  - version: 1.0
    name: Create Monthly Pension Register
    description: Create Monthly Pension Register
    fromTopic: CREATE_MONTHLY_PENSION_REGISTER
    isTransaction: true
    queryMaps: 
      
    - query: UPDATE eg_pension_register SET active=false, last_modified_by=?, last_modified_date=? WHERE effective_year=? AND effective_month=?;

      basePath: ProcessInstances.*.pensionRegister.*
      jsonMaps:            

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdBy            

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdDate 
      
      - jsonPath: $.ProcessInstances.*.pensionRegister.*.effectiveYear                  

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.effectiveMonth      
        
    - query: INSERT INTO eg_pension_register(uuid, tenantid, pensioner_id, effective_year, effective_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, interim_relief, da, total_pension, pension_deductions, active, created_by, last_modified_by, created_date, last_modified_date, wound_extraordinary_pension, attendant_allowance) SELECT ?, tenantid, pensioner_id, ?, ?, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, interim_relief, da, total_pension, pension_deductions, true, ?, ?, ?, ?, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid=?; 

      basePath: ProcessInstances.*.pensionRegister.*
      jsonMaps:      

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.pensionRegisterId      

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.effectiveYear                  

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.effectiveMonth   

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.lastModifiedBy 

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.lastModifiedDate    

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.pensionRevisionId

    - query: INSERT INTO eg_pension_register_audit(uuid, pension_register_id, tenantid, pensioner_id, effective_year, effective_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, interim_relief, da, total_pension, pension_deductions, active, created_by, last_modified_by, created_date, last_modified_date, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_year, effective_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, interim_relief, da, total_pension, pension_deductions, true, ?, ?, ?, ?, wound_extraordinary_pension, attendant_allowance FROM eg_pension_register WHERE uuid=?; 

      basePath: ProcessInstances.*.pensionRegister.*
      jsonMaps:      

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.pensionRegisterAuditId          

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdBy      

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.lastModifiedBy 

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.createdDate             

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.auditDetails.lastModifiedDate    

      - jsonPath: $.ProcessInstances.*.pensionRegister.*.pensionRegisterId

  - version: 1.0
    name: Save employee disablity details 
    description: Save employee disablity  
    fromTopic: SAVE_DISABILITY_DETAILS
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_disability_register SET active=false, last_modified_by=?, last_modified_date=? WHERE pension_employee_id=?;

      basePath: Employees.*
      jsonMaps:                 

      - jsonPath: $.Employees.*.auditDetails.createdBy             

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.uuid
      
    - query: UPDATE eg_pension_disability_register SET severity_of_disability=?, disability_percentage=?, date_of_injury=?, injury_application_date=?, wound_extraordinary_pension=?, attendant_allowance_granted=?, comments=?, last_modified_by=?, last_modified_date=? WHERE pension_employee_id=? AND active=true;

      basePath: Employees.*
      jsonMaps:     
      
      - jsonPath: $.Employees.*.severityOfDisability 
      
      - jsonPath: $.Employees.*.disabilityPercentage
      
      - jsonPath: $.Employees.*.dateOfInjury
      
      - jsonPath: $.Employees.*.injuryApplicationDate               

      - jsonPath: $.Employees.*.woundExtraordinaryPension 

      - jsonPath: $.Employees.*.attendantAllowanceGranted

      - jsonPath: $.Employees.*.comments           

      - jsonPath: $.Employees.*.auditDetails.createdBy             

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.uuid
       
    - query: INSERT INTO eg_pension_disability_register(uuid, tenantid, pension_employee_id, severity_of_disability, disability_percentage, date_of_injury, injury_application_date, wound_extraordinary_pension, attendant_allowance_granted, comments, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, true, ?, ?, ?, ?);

      basePath: Employees.*
      jsonMaps:

      - jsonPath: $.Employees.*.disabilityRegisterId  

      - jsonPath: $.Employees.*.tenantId

      - jsonPath: $.Employees.*.uuid 
      
      - jsonPath: $.Employees.*.severityOfDisability 
      
      - jsonPath: $.Employees.*.disabilityPercentage
      
      - jsonPath: $.Employees.*.dateOfInjury
      
      - jsonPath: $.Employees.*.injuryApplicationDate               

      - jsonPath: $.Employees.*.woundExtraordinaryPension 

      - jsonPath: $.Employees.*.attendantAllowanceGranted

      - jsonPath: $.Employees.*.comments           

      - jsonPath: $.Employees.*.auditDetails.createdBy      

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy      

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate      

    - query: INSERT INTO eg_pension_disability_register_audit(uuid, tenantid, disability_register_id, pension_employee_id, severity_of_disability, disability_percentage, date_of_injury, injury_application_date, wound_extraordinary_pension, attendant_allowance_granted, comments, active, created_by, last_modified_by, created_date, last_modified_date) SELECT ?, tenantid, uuid, pension_employee_id, severity_of_disability, disability_percentage, date_of_injury, injury_application_date, wound_extraordinary_pension, attendant_allowance_granted, comments, true, ?, ?, ?, ? FROM eg_pension_disability_register WHERE uuid=?;

      basePath: Employees.*
      jsonMaps:

      - jsonPath: $.Employees.*.disabilityRegisterAuditId              

      - jsonPath: $.Employees.*.auditDetails.createdBy      

      - jsonPath: $.Employees.*.auditDetails.lastModifiedBy      

      - jsonPath: $.Employees.*.auditDetails.createdDate

      - jsonPath: $.Employees.*.auditDetails.lastModifiedDate

      - jsonPath: $.Employees.*.disabilityRegisterId 

  - version: 1.0
    name: Discontinue Pensioner Pension
    description: Discontinue Pensioner Pension 
    fromTopic: PENSIONER_PENSION_DISCONTINUATION
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_pensioner SET active=false, last_modified_by=?, last_modified_date=? WHERE pensioner_number=?;

      basePath: ProcessInstances.*.pensioner
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.pensioner.pensionerNumber
      
    - query: UPDATE eg_pension_revision SET active=false, last_modified_by=?, last_modified_date=? WHERE pensioner_id=(SELECT uuid FROM eg_pension_pensioner WHERE pensioner_number=?) AND active=true;

      basePath: ProcessInstances.*.pensioner
      jsonMaps:     
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.pensioner.pensionerNumber

  - version: 1.0
    name: Update Workflow State
    description: Update Workflow State 
    fromTopic: UPDATE_PENSION_WORKFLOW_STATE
    isTransaction: true
    queryMaps:

    - query: UPDATE eg_pension_workflow_header SET workflow_state=?, last_modified_by=?, last_modified_date=? WHERE uuid=?;

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

  - version: 1.0
    name: Initiate ReComputation
    description: Initiate ReComputation
    fromTopic: INITIATE_RECOMPUTATION
    isTransaction: true
    queryMaps:       

    - query: INSERT INTO eg_pension_workflow_header(uuid, tenantid, pension_employee_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, workflow_state) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.workflowHeader
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.employee.pensionEmployeeId  
      
      - jsonPath: $.ProcessInstances.*.businessService 
      
      - jsonPath: $.ProcessInstances.*.businessId    
      
      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate       

      - jsonPath: $.ProcessInstances.*.workflowHeader.active      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

    - query: INSERT INTO eg_pension_workflow_header_audit(uuid, tenantid, pension_employee_id, workflow_header_id, workflow_type, application_number, application_date, active, created_by, last_modified_by, created_date, last_modified_date, assignee, workflow_state) SELECT ?, tenantid, pension_employee_id, uuid, workflow_type, application_number, application_date, active, ?, ?, ?, ?, assignee, workflow_state FROM eg_pension_workflow_header WHERE uuid=?;
        
      basePath: ProcessInstances.*.workflowHeader.workflowHeaderAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderAudit.workflowHeaderAuditId         

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

    - query: INSERT INTO eg_pension_employee_other_details(uuid, tenantid, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, ?, ?, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, ?, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, null, bank_code, bank_ifsc FROM eg_pension_employee_other_details WHERE workflow_header_id=?;
        
      basePath: ProcessInstances.*.employeeOtherDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.closedWorkflow.workflowHeaderId

    - query: INSERT INTO eg_pension_employee_other_details_audit(uuid, tenantid, employee_other_details_id, workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, created_by, last_modified_by, created_date, last_modified_date, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc) SELECT ?, tenantid, uuid , workflow_header_id, workflow_state, ltc, lpd, pension_arrear, is_da_medical_admissible, fma, medical_relief, miscellaneous, over_payment, income_tax, cess, bank_address, account_number, claimant, wef, active, ?, ?, ?, ?, total_no_pay_leaves_days, dues, is_employment_active, is_convicted_serious_crime_or_grave_misconduct, is_any_judicial_proceeding_is_continuing, is_any_misconduct_insolvency_inefficiency, is_employee_dies_in_terrorist_attack, is_employee_dies_in_accidental_death, is_commutation_opted, reason_for_retirement, is_eligible_for_pension, is_dues_present, is_dues_amount_decided, is_taken_monthly_pension_and_gratuity, is_taken_gratuity_commutation_terminal_benefit, is_taken_compensation_pension_and_gratuity, dies_in_extremists_dacoits_smuggler_antisocial_attack, is_compassionate_pension_granted, total_no_pay_leaves_months, total_no_pay_leaves_years, no_dues_for_avail_govt_accomodation, employee_group, date_of_contingent, bank_code, bank_ifsc FROM  eg_pension_employee_other_details WHERE uuid=?;
        
      basePath: ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.employeeOtherDetails.employeeOtherDetailsAudit.employeeOtherDetailsAuditId      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId 

    - query: INSERT INTO eg_pension_calculation_details(uuid, tenantid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified) SELECT ?, ?, ?, ?, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, ?, ?, ?, ?, ?, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified FROM eg_pension_calculation_details WHERE workflow_header_id=?;
        
      basePath: ProcessInstances.*.pensionCalculationDetails
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId   

      - jsonPath: $.ProcessInstances.*.workflowHeader.state

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.closedWorkflow.workflowHeaderId

    - query: INSERT INTO eg_pension_calculation_details_audit(uuid, tenantid, pension_calculation_id, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, created_by, last_modified_by, created_date, last_modified_date, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified) SELECT ?, tenantid, uuid, workflow_header_id, workflow_state, basic_pension_sytem, pension_deductions_system, additional_pension_system, commuted_pension_system, commuted_value_system, family_pension_i_system, family_pension_ii_system, dcrg_system, net_deductions_system, final_calculated_pension_system, basic_pension_verified, pension_deductions_verified, additional_pension_verified, commuted_pension_verified, commuted_value_verified, family_pension_i_verified, family_pension_ii_verified, dcrg_verified, net_deductions_verified, final_calculated_pension_verified, active, ?, ?, ?, ?, interim_relief_system, da_system, interim_relief_verified, da_verified, nqs_year_system, nqs_month_system, nqs_day_system, nqs_year_verified, nqs_month_verified, nqs_day_verified, dues_deductions_system, compassionate_pension_system, compensation_pension_system, terminal_benefit_system, dues_deductions_verified, compassionate_pension_verified, compensation_pension_verified, terminal_benefit_verified, final_calculated_gratuity_system, final_calculated_gratuity_verified, family_pension_i_start_date_system, family_pension_i_start_date_verified, family_pension_i_end_date_system, family_pension_i_end_date_verified, family_pension_ii_start_date_system, family_pension_ii_start_date_verified, ex_gratia_system, ex_gratia_verified, pensioner_family_pension_system, pensioner_family_pension_verified, total_pension_system, total_pension_verified, provisional_pension_system, provisional_pension_verified, interim_relief_applicable, interim_relief_expression, basic_pension_applicable, basic_pension_expression, provisional_pension_applicable, provisional_pension_expression, compassionate_pension_applicable, compassionate_pension_expression, compensation_pension_applicable, compensation_pension_expression, commuted_pension_applicable, commuted_pension_expression, family_pension_i_applicable, family_pension_i_expression, family_pension_ii_applicable, family_pension_ii_expression, da_applicable, da_expression, additional_pension_applicable, additional_pension_expression, total_pension_applicable, total_pension_expression, pension_deductions_applicable, pension_deductions_expression, net_deductions_applicable, net_deductions_expression, final_calculated_pension_applicable, final_calculated_pension_expression, commutation_value_applicable, commutation_value_expression, dcrg_applicable, dcrg_expression, terminal_benefit_applicable, terminal_benefit_expression, dues_deductions_applicable, dues_deductions_expression, final_calculated_gratuity_applicable, final_calculated_gratuity_expression, ex_gratia_applicable, ex_gratia_expression, pensioner_family_pension_applicable, pensioner_family_pension_expression, invalid_pension_system, wound_extraordinary_pension_system, attendant_allowance_system, invalid_pension_verified, wound_extraordinary_pension_verified, attendant_allowance_verified, invalid_pension_applicable, invalid_pension_expression, wound_extraordinary_pension_applicable, wound_extraordinary_pension_expression, attendant_allowance_applicable, attendant_allowance_expression, gqs_year_system, gqs_month_system, gqs_day_system, gqs_year_verified, gqs_month_verified, gqs_day_verified, notification_text_system, notification_text_verified FROM eg_pension_calculation_details WHERE uuid=?;
        
      basePath: ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit
      jsonMaps:

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsAudit.pensionCalculationDetailsAuditId      

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate

      - jsonPath: $.ProcessInstances.*.pensionCalculationDetails.pensionCalculationDetailsId

    - query: INSERT INTO eg_pension_recomputation_register(uuid, tenantid, closed_workflow_header_id, new_workflow_header_id, active, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: ProcessInstances.*.recomputationRegister
      jsonMaps:                 

      - jsonPath: $.ProcessInstances.*.recomputationRegister.recomputationRegisterId

      - jsonPath: $.ProcessInstances.*.tenantId

      - jsonPath: $.ProcessInstances.*.closedWorkflow.workflowHeaderId

      - jsonPath: $.ProcessInstances.*.workflowHeader.workflowHeaderId

      - jsonPath: $.ProcessInstances.*.recomputationRegister.active

      - jsonPath: $.ProcessInstances.*.auditDetails.createdBy             

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedBy 

      - jsonPath: $.ProcessInstances.*.auditDetails.createdDate

      - jsonPath: $.ProcessInstances.*.auditDetails.lastModifiedDate 
      
  - version: 1.0
    name: Save Migrated Pensioner
    description: Save Migrated Pensioner
    fromTopic: SAVE_MIGRATED_PENSIONER
    isTransaction: true
    queryMaps:    

    - query: INSERT INTO eg_pension_pensioner_migration_final("Sl No", "Name", "Employee Code", "Date of Birth", "Gender", "Date of Death (if applicable)", "Mobile Number", "Email", "Address", "Bank Details", "Bank Account Number", "Bank IFSC","Bank Code","Employee Status", "Employee Type", "Employee Group", "Designation", "Department", "Date of Joining", "Service End Date", "Date of Retirement", "Date of Commencement", "Claimant Name", "Claimant Date of Birth", "Claimant Relationship", "Claimant Mobile Number", "Claimant Adddress", "Claimant Bank Details", "Claimant Bank Account Number", "Claimant Bank IFSC", "Claimant Bank Code", "NQS Year", "NQS Month", "NQS Days", "LPD", "Commuted Value", "DCRG", "DCRG Dues Deduction", "Net Gratuity", "Terminal Benefit", "Family Pension I Start Date", "Family Pension I End Date", "Family Pension II Start Date", "Ex Gratia", "LTC", "Whether DA Medical Admissible", "Pensioner Number", "Start Year", "Start Month", "End Year", "End Month", "Basic Pension", "DA", "Commuted Pension", "Additional Pension", "IR", "FMA", "Misc", "Wound or Extraordinary Pension (in case of disability)", "Attendant Allowance (in case of disability)", "Total Pension", "Over Payment", "Income Tax", "CESS", "Pension Deductions", "Net Deductions", "Net Pension", "Bill Code", employee_id, employee_audit_id, employee_contact_details_id, employee_assignment_id, employee_service_history_id, dependent_id, dependent_audit_id, pensioner_id, pensioner_audit_id, pensioner_application_details_id, pensioner_final_calculated_benefit_id, pension_revision_id, pension_revision_audit_id, created_by, last_modified_by, created_date, last_modified_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?);

      basePath: Pensioner.*
      jsonMaps:

      - jsonPath: $.Pensioner.*.slNo   

      - jsonPath: $.Pensioner.*.name

      - jsonPath: $.Pensioner.*.code     

      - jsonPath: $.Pensioner.*.dateOfBirth   

      - jsonPath: $.Pensioner.*.gender

      - jsonPath: $.Pensioner.*.dateOfDeath

      - jsonPath: $.Pensioner.*.mobileNumber

      - jsonPath: $.Pensioner.*.email     

      - jsonPath: $.Pensioner.*.address      
      
      - jsonPath: $.Pensioner.*.bankDetails      

      - jsonPath: $.Pensioner.*.bankAccountNumber      

      - jsonPath: $.Pensioner.*.bankIfsc

      - jsonPath: $.Pensioner.*.bankCode
      
      - jsonPath: $.Pensioner.*.employeeStatus      

      - jsonPath: $.Pensioner.*.employeeType      

      - jsonPath: $.Pensioner.*.employeeGroup      

      - jsonPath: $.Pensioner.*.designation      

      - jsonPath: $.Pensioner.*.department      

      - jsonPath: $.Pensioner.*.dateOfJoining      

      - jsonPath: $.Pensioner.*.serviceEndDate      

      - jsonPath: $.Pensioner.*.dateOfRetirement

      - jsonPath: $.Pensioner.*.dateOfContingent

      - jsonPath: $.Pensioner.*.claimantName

      - jsonPath: $.Pensioner.*.claimantDob

      - jsonPath: $.Pensioner.*.claimantRelationship

      - jsonPath: $.Pensioner.*.claimantMobileNumber

      - jsonPath: $.Pensioner.*.claimantAddress

      - jsonPath: $.Pensioner.*.claimantBankDetails

      - jsonPath: $.Pensioner.*.claimantBankAccountNumber

      - jsonPath: $.Pensioner.*.claimantBankIfsc

      - jsonPath: $.Pensioner.*.claimantBankCode

      - jsonPath: $.Pensioner.*.nqsYear

      - jsonPath: $.Pensioner.*.nqsMonth

      - jsonPath: $.Pensioner.*.nqsDays

      - jsonPath: $.Pensioner.*.lpd
      
      - jsonPath: $.Pensioner.*.commutedValue

      - jsonPath: $.Pensioner.*.dcrg

      - jsonPath: $.Pensioner.*.dcrgDuesDeductions

      - jsonPath: $.Pensioner.*.netGratuity

      - jsonPath: $.Pensioner.*.terminalBenefit

      - jsonPath: $.Pensioner.*.familyPensionIStartDate

      - jsonPath: $.Pensioner.*.familyPensionIEndDate

      - jsonPath: $.Pensioner.*.familyPensionIIStartDate

      - jsonPath: $.Pensioner.*.exGratia

      - jsonPath: $.Pensioner.*.ltc

      - jsonPath: $.Pensioner.*.isDaMedicalAdmissible

      - jsonPath: $.Pensioner.*.pensionerNumber

      - jsonPath: $.Pensioner.*.startYear

      - jsonPath: $.Pensioner.*.startMonth

      - jsonPath: $.Pensioner.*.endYear

      - jsonPath: $.Pensioner.*.endMonth

      - jsonPath: $.Pensioner.*.basicPension

      - jsonPath: $.Pensioner.*.da

      - jsonPath: $.Pensioner.*.commutedPension

      - jsonPath: $.Pensioner.*.additionalPension

      - jsonPath: $.Pensioner.*.ir

      - jsonPath: $.Pensioner.*.fma

      - jsonPath: $.Pensioner.*.misc

      - jsonPath: $.Pensioner.*.woundExtraordinaryPension

      - jsonPath: $.Pensioner.*.attendantAllowance

      - jsonPath: $.Pensioner.*.totalPension

      - jsonPath: $.Pensioner.*.overPayment

      - jsonPath: $.Pensioner.*.incomeTax

      - jsonPath: $.Pensioner.*.cess

      - jsonPath: $.Pensioner.*.pensionDeductions

      - jsonPath: $.Pensioner.*.netDeductions

      - jsonPath: $.Pensioner.*.netPension

      - jsonPath: $.Pensioner.*.billCode

      - jsonPath: $.Pensioner.*.employeeId

      - jsonPath: $.Pensioner.*.employeeAuditId

      - jsonPath: $.Pensioner.*.employeeContactDetailsId

      - jsonPath: $.Pensioner.*.employeeAssignmentId

      - jsonPath: $.Pensioner.*.employeeServiceHistoryId

      - jsonPath: $.Pensioner.*.dependentId

      - jsonPath: $.Pensioner.*.dependentAuditId

      - jsonPath: $.Pensioner.*.pensionerId

      - jsonPath: $.Pensioner.*.pensionerAuditId

      - jsonPath: $.Pensioner.*.pensionerApplicationDetailsId

      - jsonPath: $.Pensioner.*.pensionerFinalCalculatedBenefitId

      - jsonPath: $.Pensioner.*.pensionRevisionId

      - jsonPath: $.Pensioner.*.pensionRevisionAuditId            

      - jsonPath: $.Pensioner.*.auditDetails.createdBy

      - jsonPath: $.Pensioner.*.auditDetails.lastModifiedBy

      - jsonPath: $.Pensioner.*.auditDetails.createdDate

      - jsonPath: $.Pensioner.*.auditDetails.lastModifiedDate          
    
  - version: 1.0
    name: Create Revised Pension Bulk
    description: Create Revised Pension Bulk
    fromTopic: CREATE_REVISED_PENSION_BULK
    isTransaction: true
    queryMaps:   

    - query: DELETE from eg_pension_revision where effective_start_year>=? and effective_start_month>=?;

      basePath: Parameters
      jsonMaps:      

      - jsonPath: $.Parameters.effectiveYear      

      - jsonPath: $.Parameters.effectiveMonth
        
    - query: UPDATE eg_pension_revision SET effective_end_year=?, effective_end_month=?, last_modified_by=?, last_modified_date=? WHERE uuid =?;

      basePath: Parameters.oldPensionRevisions.*
      jsonMaps:      

      - jsonPath: $.Parameters.oldPensionRevisions.*.effectiveEndYear

      - jsonPath: $.Parameters.oldPensionRevisions.*.effectiveEndMonth                  

      - jsonPath: $.Parameters.oldPensionRevisions.*.auditDetails.createdBy      

      - jsonPath: $.Parameters.oldPensionRevisions.*.auditDetails.createdDate             

      - jsonPath: $.Parameters.oldPensionRevisions.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: Parameters.oldPensionRevisions.*
      jsonMaps:
      
      - jsonPath: $.Parameters.oldPensionRevisions.*.pensionRevisionAuditId            

      - jsonPath: $.Parameters.oldPensionRevisions.*.auditDetails.createdBy      

      - jsonPath: $.Parameters.oldPensionRevisions.*.auditDetails.createdDate          

      - jsonPath: $.Parameters.oldPensionRevisions.*.pensionRevisionId

    - query: INSERT INTO eg_pension_revision(uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, last_modified_by, created_date, last_modified_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, true, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

      basePath: Parameters.newPensionRevisions.*
      jsonMaps:
      
      - jsonPath: $.Parameters.newPensionRevisions.*.pensionRevisionId

      - jsonPath: $.Parameters.newPensionRevisions.*.tenantId

      - jsonPath: $.Parameters.newPensionRevisions.*.pensionerId     

      - jsonPath: $.Parameters.newPensionRevisions.*.effectiveStartYear

      - jsonPath: $.Parameters.newPensionRevisions.*.effectiveStartMonth

      - jsonPath: $.Parameters.newPensionRevisions.*.effectiveEndYear      

      - jsonPath: $.Parameters.newPensionRevisions.*.effectiveEndMonth  

      - jsonPath: $.Parameters.newPensionRevisions.*.pensionArrear 

      - jsonPath: $.Parameters.newPensionRevisions.*.fma

      - jsonPath: $.Parameters.newPensionRevisions.*.miscellaneous
      
      - jsonPath: $.Parameters.newPensionRevisions.*.overPayment

      - jsonPath: $.Parameters.newPensionRevisions.*.incomeTax

      - jsonPath: $.Parameters.newPensionRevisions.*.cess

      - jsonPath: $.Parameters.newPensionRevisions.*.basicPension

      - jsonPath: $.Parameters.newPensionRevisions.*.additionalPension          

      - jsonPath: $.Parameters.newPensionRevisions.*.commutedPension

      - jsonPath: $.Parameters.newPensionRevisions.*.netDeductions

      - jsonPath: $.Parameters.newPensionRevisions.*.finalCalculatedPension              

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.createdBy

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.lastModifiedBy

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.createdDate

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.lastModifiedDate
      
      - jsonPath: $.Parameters.newPensionRevisions.*.interimRelief

      - jsonPath: $.Parameters.newPensionRevisions.*.da

      - jsonPath: $.Parameters.newPensionRevisions.*.totalPension

      - jsonPath: $.Parameters.newPensionRevisions.*.pensionDeductions

      - jsonPath: $.Parameters.newPensionRevisions.*.pensionerFinalCalculatedBenefitId

      - jsonPath: $.Parameters.newPensionRevisions.*.remarks

      - jsonPath: $.Parameters.newPensionRevisions.*.woundExtraordinaryPension

      - jsonPath: $.Parameters.newPensionRevisions.*.attendantAllowance

    - query: INSERT INTO eg_pension_revision_audit(uuid, pension_revision_id, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, active, created_by, created_date, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance) SELECT ?, uuid, tenantid, pensioner_id, effective_start_year, effective_start_month, effective_end_year, effective_end_month, pension_arrear, fma, miscellaneous, over_payment, income_tax, cess, basic_pension, additional_pension, commuted_pension, net_deductions, final_calculated_pension, true, ?, ?, interim_relief, da, total_pension, pension_deductions, pensioner_final_calculated_benefit_id, remarks, wound_extraordinary_pension, attendant_allowance FROM eg_pension_revision WHERE uuid = ?;  

      basePath: Parameters.newPensionRevisions.*
      jsonMaps:
      
      - jsonPath: $.Parameters.newPensionRevisions.*.pensionRevisionAuditId            

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.createdBy      

      - jsonPath: $.Parameters.newPensionRevisions.*.auditDetails.createdDate          

      - jsonPath: $.Parameters.newPensionRevisions.*.pensionRevisionId